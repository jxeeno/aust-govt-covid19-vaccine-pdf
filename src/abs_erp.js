const rows = [
    ['NSW',24,540233],
    ['NSW',29,607891],
    ['NSW',34,611590],
    ['NSW',39,582824],
    ['NSW',44,512803],
    ['NSW',49,527098],
    ['NSW',54,484708],
    ['NSW',59,495116],
    ['NSW',64,461329],
    ['NSW',69,404034],
    ['NSW',74,355280],
    ['NSW',79,253241],
    ['NSW',84,174990],
    ['NSW',89,106699],
    ['NSW',94,54141],
    ['NSW',99,16093],
    ['NSW',100,2162],
    ['VIC',24,471550],
    ['VIC',29,535193],
    ['VIC',34,533673],
    ['VIC',39,495421],
    ['VIC',44,425318],
    ['VIC',49,431250],
    ['VIC',54,402759],
    ['VIC',59,390227],
    ['VIC',64,360727],
    ['VIC',69,313979],
    ['VIC',74,274464],
    ['VIC',79,193065],
    ['VIC',84,136568],
    ['VIC',89,83125],
    ['VIC',94,42166],
    ['VIC',99,12410],
    ['VIC',100,1721],
    ['QLD',24,338824],
    ['QLD',29,370468],
    ['QLD',34,362541],
    ['QLD',39,354219],
    ['QLD',44,325208],
    ['QLD',49,348003],
    ['QLD',54,321168],
    ['QLD',59,317489],
    ['QLD',64,288317],
    ['QLD',69,254114],
    ['QLD',74,226033],
    ['QLD',79,156776],
    ['QLD',84,100692],
    ['QLD',89,57073],
    ['QLD',94,28134],
    ['QLD',99,7931],
    ['QLD',100,1128],
    ['SA',24,114425],
    ['SA',29,117745],
    ['SA',34,118661],
    ['SA',39,116028],
    ['SA',44,104971],
    ['SA',49,112218],
    ['SA',54,111817],
    ['SA',59,114566],
    ['SA',64,109098],
    ['SA',69,98389],
    ['SA',74,88672],
    ['SA',79,62401],
    ['SA',84,43373],
    ['SA',89,27009],
    ['SA',94,14083],
    ['SA',99,4323],
    ['SA',100,653],
    ['WA',24,166709],
    ['WA',29,184863],
    ['WA',34,204015],
    ['WA',39,198269],
    ['WA',44,174141],
    ['WA',49,178038],
    ['WA',54,168290],
    ['WA',59,162297],
    ['WA',64,147253],
    ['WA',69,127249],
    ['WA',74,108229],
    ['WA',79,73485],
    ['WA',84,50317],
    ['WA',89,29564],
    ['WA',94,14100],
    ['WA',99,4015],
    ['WA',100,571],
    ['TAS',24,31641],
    ['TAS',29,34115],
    ['TAS',34,33326],
    ['TAS',39,32084],
    ['TAS',44,30063],
    ['TAS',49,34194],
    ['TAS',54,34354],
    ['TAS',59,37659],
    ['TAS',64,37224],
    ['TAS',69,33644],
    ['TAS',74,30156],
    ['TAS',79,20737],
    ['TAS',84,13647],
    ['TAS',89,7901],
    ['TAS',94,3553],
    ['TAS',99,1055],
    ['TAS',100,106],
    ['NT',24,16094],
    ['NT',29,22031],
    ['NT',34,23855],
    ['NT',39,20504],
    ['NT',44,17249],
    ['NT',49,16455],
    ['NT',54,15503],
    ['NT',59,14230],
    ['NT',64,11553],
    ['NT',69,8651],
    ['NT',74,5962],
    ['NT',79,3447],
    ['NT',84,1761],
    ['NT',89,753],
    ['NT',94,323],
    ['NT',99,84],
    ['NT',100,13],
    ['ACT',24,32626],
    ['ACT',29,33992],
    ['ACT',34,35734],
    ['ACT',39,35354],
    ['ACT',44,30155],
    ['ACT',49,29103],
    ['ACT',54,25591],
    ['ACT',59,23685],
    ['ACT',64,20781],
    ['ACT',69,17799],
    ['ACT',74,15945],
    ['ACT',79,10423],
    ['ACT',84,6996],
    ['ACT',89,4033],
    ['ACT',94,1912],
    ['ACT',99,580],
    ['ACT',100,57],

    // net diff for 15 Y/O
    ['ACT', 15, 4596],
    ['NSW', 15, 93131],
    ['NT', 15, 3024],
    ['QLD', 15, 64425],
    ['SA', 15, 20006],
    ['TAS', 15, 6306],
    ['VIC', 15, 73376],
    ['WA', 15, 31310],

    // net diff for 16-19 y/o
    ['ACT', 16, 19271],
    ['NSW', 16, 375419],
    ['NT', 16, 12103],
    ['QLD', 16, 254589],
    ['SA', 16, 81968],
    ['TAS', 16, 24713],
    ['VIC', 16, 303958],
    ['WA', 16, 123573],

    // net diff for 16 y/o
    ['ACT', 16, 19271],
    ['NSW', 16, 375419],
    ['NT', 16, 12103],
    ['QLD', 16, 254589],
    ['SA', 16, 81968],
    ['TAS', 16, 24713],
    ['VIC', 16, 303958],
    ['WA', 16, 123573],

    // net diff for 16-19 y/o
    ['ACT', 16, 19271],
    ['NSW', 16, 375419],
    ['NT', 16, 12103],
    ['QLD', 16, 254589],
    ['SA', 16, 81968],
    ['TAS', 16, 24713],
    ['VIC', 16, 303958],
    ['WA', 16, 123573],
]

const rowjurisd = {
    NSW: [97225, 98253, 97276, 98808, 103529, 101835, 101994, 103457, 102991, 102501, 102673, 101009, 101218, 99901, 96080, 93131, 91539, 91627, 92765, 99488, 103638, 104263, 106625, 110984, 114723, 119547, 120660, 120636, 122466, 124582, 125711, 123384, 121711, 120054, 120730, 119212, 119033, 118055, 114940, 111584, 106760, 103481, 101600, 100296, 100666, 100801, 103703, 105374, 108437, 108783, 100845, 99112, 96118, 93739, 94894, 94718, 99495, 101052, 100303, 99548, 96296, 93439, 93214, 90335, 88045, 85230, 82616, 81252, 77953, 76983, 75064, 71851, 72644, 73483, 62238, 58508, 55237, 48759, 47211, 43526, 40601, 37579, 34612, 32519, 29679, 25879, 23261, 20991, 19115, 17453, 15523, 12491, 10589, 8663, 6875, 5404, 4028, 3050, 2155, 1456, 2162],
    VIC: [77943, 77826, 79375, 80685, 86157, 84522, 83399, 84758, 82688, 81293, 81810, 80029, 79741, 79174, 76320, 73376, 73433, 72930, 75090, 82505, 87216, 88407, 92229, 99207, 104491, 108246, 107605, 105758, 105980, 107604, 109337, 107117, 107082, 104809, 105328, 103478, 101672, 100084, 96656, 93531, 89307, 86434, 84157, 82622, 82798, 82982, 84943, 85473, 88475, 89377, 84392, 83236, 80520, 77108, 77503, 76583, 78923, 79209, 77946, 77566, 75483, 73581, 72119, 70037, 69507, 66274, 64061, 62813, 60813, 60018, 58258, 55698, 56054, 56802, 47652, 44031, 41717, 37111, 36565, 33641, 31677, 29375, 27317, 25095, 23104, 20130, 18562, 16408, 14612, 13413, 12100, 9643, 8223, 6786, 5414, 4008, 3206, 2288, 1647, 1261, 1721],
    QLD: [61050, 61503, 62307, 63623, 66119, 66390, 67376, 68297, 68298, 68886, 69819, 69665, 69666, 68992, 67063, 64425, 63505, 62250, 62993, 65841, 66033, 65699, 66550, 68806, 71736, 73722, 73811, 74228, 74090, 74617, 74694, 72454, 71818, 71419, 72156, 71718, 71698, 72416, 69800, 68587, 66541, 64630, 64164, 64499, 65374, 65765, 68272, 69942, 71567, 72457, 67820, 65816, 63523, 62603, 61406, 61770, 64177, 64432, 63966, 63144, 60697, 59062, 57766, 55884, 54908, 52878, 51489, 50953, 49706, 49088, 47929, 46387, 45844, 46894, 38979, 37299, 34155, 30079, 29120, 26123, 24257, 22013, 19791, 18318, 16313, 14259, 12570, 11067, 9991, 9186, 8037, 6616, 5533, 4368, 3580, 2624, 1991, 1372, 1113, 831, 1128],
    SA: [18902, 18993, 19197, 19866, 21454, 20840, 21109, 21409, 21550, 21143, 21466, 21299, 21296, 21091, 20354, 20006, 20040, 19985, 20402, 21541, 22306, 22412, 22815, 23113, 23779, 24151, 23410, 23400, 23241, 23543, 23783, 23622, 23623, 23588, 24045, 23890, 23833, 23354, 22621, 22330, 21493, 20958, 20687, 20907, 20926, 21097, 21567, 22264, 23365, 23925, 23095, 22702, 22436, 21607, 21977, 22208, 22920, 23160, 22934, 23344, 22728, 22329, 21706, 21389, 20946, 20353, 19938, 19797, 19178, 19123, 18690, 18077, 17827, 18615, 15463, 14493, 13423, 12325, 11600, 10560, 9992, 9511, 8695, 8037, 7138, 6428, 5951, 5324, 4891, 4415, 3923, 3271, 2744, 2214, 1931, 1482, 1019, 797, 623, 402, 653],
    WA: [32703, 33371, 34160, 35091, 36235, 35274, 34926, 35238, 34553, 35185, 34738, 34240, 34545, 34174, 32840, 31310, 30933, 30293, 30488, 31859, 32573, 33202, 32868, 33550, 34516, 35821, 36034, 36764, 37427, 38817, 40221, 40166, 40793, 41169, 41666, 40809, 40614, 40213, 39023, 37610, 36369, 35325, 34281, 33918, 34248, 34139, 34514, 35394, 36839, 37152, 35001, 34821, 33290, 32697, 32481, 32218, 32879, 32977, 32309, 31914, 30983, 30100, 29231, 28481, 28458, 26812, 26086, 25392, 24756, 24203, 23191, 22400, 22364, 22407, 17867, 16683, 16107, 14148, 14054, 12493, 11823, 11000, 10072, 9166, 8256, 7495, 6411, 5912, 5124, 4622, 4047, 3195, 2752, 2219, 1887, 1367, 1026, 700, 515, 407, 571],
    TAS: [5881, 5606, 5567, 5880, 6333, 6240, 6259, 6339, 6315, 6564, 6518, 6798, 6774, 6702, 6526, 6306, 6064, 6037, 6281, 6331, 6336, 6319, 6172, 6292, 6522, 6906, 6810, 6707, 6773, 6919, 6962, 6637, 6639, 6474, 6614, 6571, 6506, 6372, 6372, 6263, 6063, 6063, 6001, 5858, 6078, 6340, 6506, 6749, 7177, 7422, 7099, 7135, 6845, 6673, 6602, 6931, 7534, 7542, 7709, 7943, 7655, 7618, 7428, 7260, 7263, 6856, 6761, 6814, 6668, 6545, 6388, 6113, 6128, 6450, 5077, 4801, 4593, 3981, 3826, 3536, 3227, 2982, 2771, 2468, 2199, 1898, 1808, 1558, 1364, 1273, 1028, 857, 695, 540, 433, 333, 296, 199, 144, 83, 106],
    NT: [3548, 3510, 3463, 3532, 3709, 3501, 3478, 3575, 3707, 3543, 3552, 3394, 3475, 3284, 3277, 3024, 2996, 3051, 3026, 3030, 3003, 2992, 3155, 3414, 3530, 3976, 4142, 4362, 4619, 4932, 5031, 4726, 4860, 4757, 4481, 4441, 4183, 4240, 3896, 3744, 3513, 3555, 3377, 3361, 3443, 3164, 3340, 3117, 3321, 3513, 3211, 3189, 3070, 3033, 3000, 2844, 2846, 2941, 2868, 2731, 2592, 2389, 2217, 2233, 2122, 2000, 1811, 1750, 1604, 1486, 1418, 1294, 1184, 1132, 934, 797, 730, 669, 658, 593, 528, 344, 343, 291, 255, 191, 174, 136, 138, 114, 84, 88, 64, 54, 33, 25, 20, 14, 12, 13, 13],
    ACT: [5559, 5353, 5392, 5686, 5871, 5951, 5761, 5862, 5710, 5587, 5611, 5307, 5163, 4997, 4937, 4596, 4522, 4615, 4806, 5328, 5833, 6257, 6760, 6863, 6913, 6668, 6800, 6757, 6739, 7028, 7167, 7094, 7076, 7081, 7316, 7209, 7343, 6983, 7035, 6784, 6470, 6282, 5923, 5846, 5634, 5751, 5751, 5777, 5930, 5894, 5512, 5302, 5027, 4755, 4995, 4688, 4802, 4713, 4849, 4633, 4412, 4286, 4135, 4020, 3928, 3647, 3646, 3592, 3503, 3411, 3303, 3284, 3259, 3352, 2747, 2444, 2271, 2002, 1984, 1722, 1633, 1523, 1390, 1301, 1149, 1051, 893, 757, 688, 644, 531, 463, 387, 255, 276, 203, 149, 115, 54, 59, 57],
    AUS: [302836, 304444, 306771, 313199, 329461, 324602, 324369, 328989, 325873, 324760, 326250, 321795, 321937, 318372, 307461, 296220, 293076, 290838, 295907, 315961, 326979, 329598, 337218, 352269, 366240, 379078, 379323, 378666, 381385, 388084, 392950, 385257, 383669, 379415, 382400, 377391, 374944, 371786, 360398, 350501, 336575, 326802, 320242, 317365, 319223, 320094, 328665, 334166, 345192, 348599, 327047, 321381, 310884, 302279, 302937, 302031, 313644, 316094, 312971, 310899, 300925, 292874, 287893, 279712, 275250, 264110, 256475, 252423, 244241, 240927, 234317, 225157, 225338, 229183, 190996, 179093, 168269, 149114, 145042, 132224, 123759, 114357, 105009, 97206, 88112, 77339, 69640, 62161, 55928, 51125, 45276, 36629, 30988, 25101, 20431, 15447, 11736, 8537, 6263, 4514, 6415],
}

const getPopulation = (state, ageLower, ageUpper, plus) => {
    // const stateRows = rows.filter(row => row[0] === state);
    const pops = rowjurisd[state];
    // const stateTotal = stateRows.find(row => row[1] === 'TT')[2];
    // const stateSumTotal = stateRows.reduce((runningTotal, item) => runningTotal + item[2], 0);
    // const plusTotal = stateTotal - stateSumTotal;

    // console.log({stateTotal, stateSumTotal, plusTotal})

    const subTotal = pops.filter((row, i) => i >= ageLower && i <= ageUpper).reduce((runningTotal, item) => runningTotal + item, 0);

    return subTotal; // + (plus ? plusTotal : 0);
}

// console.log(getPopulation('AUS', 16, 999).toLocaleString())

// const buckets = {}
// for(const row of rows)

module.exports = {
    getPopulation
}
